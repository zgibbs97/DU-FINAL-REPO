[{"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/index.js":"1","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/App.js":"2","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/reportWebVitals.js":"3","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/pages/Home.js":"4","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/Header/index.js":"5","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/Footer/index.js":"6","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/utils/queries.js":"7","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/ProfileList/index.js":"8","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/ProfileForm/index.js":"9","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/utils/mutations.js":"10"},{"size":500,"mtime":1622237119677,"results":"11","hashOfConfig":"12"},{"size":614,"mtime":1622237119675,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1622237119678,"results":"14","hashOfConfig":"12"},{"size":921,"mtime":1622237119678,"results":"15","hashOfConfig":"12"},{"size":540,"mtime":1622237119676,"results":"16","hashOfConfig":"12"},{"size":291,"mtime":1622237119676,"results":"17","hashOfConfig":"12"},{"size":158,"mtime":1622237119679,"results":"18","hashOfConfig":"12"},{"size":987,"mtime":1622237119677,"results":"19","hashOfConfig":"12"},{"size":1781,"mtime":1625720657883,"results":"20","hashOfConfig":"12"},{"size":188,"mtime":1622237119678,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s29mdd",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/index.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/App.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/reportWebVitals.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/pages/Home.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/Header/index.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/Footer/index.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/utils/queries.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/ProfileList/index.js",[],"/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/components/ProfileForm/index.js",["43"],"import React, { useState } from 'react';\n// Import the `useMutation()` hook from Apollo Client\nimport { useMutation } from '@apollo/client';\n// Import the GraphQL mutation\nimport { ADD_PROFILE } from '../../utils/mutations';\n\nconst ProfileForm = () => {\n  const [name, setName] = useState('');\n\n  // Invoke `useMutation()` hook to return a Promise-based function and data about the ADD_PROFILE mutation\n  const [addProfile, { error }] = useMutation(ADD_PROFILE);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // Since mutation function is async, wrap in a `try...catch` to catch any network errors from throwing due to a failed request.\n    try {\n      // Execute mutation and pass in defined parameter data as variables\n      const { data } = await addProfile({\n        variables: { name },\n      });\n\n      window.location.reload();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Add yourself to the list...</h3>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12 col-lg-9\">\n          <input\n            placeholder=\"Add your profile name...\"\n            value={name}\n            className=\"form-input w-100\"\n            onChange={(event) => setName(event.target.value)}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n            Add Profile\n          </button>\n        </div>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default ProfileForm;\n","/Users/jaymascarenas/Dropbox/coding-boot-camp/FullStack-Ground/01-Class-Content/21-MERN/01-Activities/15-Ins_useMutation/client/src/utils/mutations.js",[],{"ruleId":"44","severity":1,"message":"45","line":19,"column":15,"nodeType":"46","messageId":"47","endLine":19,"endColumn":19},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]